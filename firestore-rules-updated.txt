rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow read for authenticated users, write only own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Courses collection - read for all authenticated, write for admins only
    match /courses/{courseId} {
      // Allow read for authenticated users (no role check needed for reading)
      allow read: if request.auth != null;
      
      // Allow write only for admin users
      allow create, update, delete: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Course materials subcollection
      match /materials/{materialId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth != null && 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
      
      // Course enrollments subcollection
      match /enrollments/{enrollmentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
                       (request.auth.uid == resource.data.userId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      }
    }
    
    // Quizzes collection - similar to courses
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Submissions collection
    match /submissions/{submissionId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == resource.data.userId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.userId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null && 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
